{"ast":null,"code":"var _jsxFileName = \"/Users/davinci/TaskManagementFE/src/components/BoardContent/BoardContent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Column from \"components/Column/Column\";\nimport { Container, Draggable } from \"react-smooth-dnd\";\nimport \"./BoardContent.scss\";\nimport { isEmpty } from \"lodash\";\nimport { initialData } from \"actions/initialData\";\nimport { mapOrder } from \"ultilities/ultis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BoardContent = () => {\n  _s();\n\n  const [board, setBoard] = useState({});\n  const [column, setColumn] = useState([]);\n  useEffect(() => {\n    const getBoardFromDB = initialData.boards.find(board => board.id === \"board-1\");\n\n    if (getBoardFromDB) {\n      setBoard(getBoardFromDB);\n      setColumn(mapOrder(getBoardFromDB.columns, getBoardFromDB.columnOrder, \"id\"));\n    }\n  }, []);\n\n  if (isEmpty(board)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"not-found\",\n      children: \"Board not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"workspace\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        orientation: \"horizontal\",\n        onDrop: this.onColumnDrop,\n        dragHandleSelector: \".column-drag-handle\",\n        dropPlaceholder: {\n          animationDuration: 150,\n          showOnTop: true,\n          className: \"cards-drop-preview\"\n        },\n        children: column.map((column, index) => /*#__PURE__*/_jsxDEV(Column, {\n          column: column\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(BoardContent, \"6YquAYM2xIemk/Bx8b+NbBfjlqk=\");\n\n_c = BoardContent;\nexport default _c2 = /*#__PURE__*/React.memo(BoardContent);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BoardContent\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/davinci/TaskManagementFE/src/components/BoardContent/BoardContent.jsx"],"names":["React","useState","useEffect","Column","Container","Draggable","isEmpty","initialData","mapOrder","BoardContent","board","setBoard","column","setColumn","getBoardFromDB","boards","find","id","columns","columnOrder","onColumnDrop","animationDuration","showOnTop","className","map","index","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,kBAArC;AACA,OAAO,qBAAP;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,QAAT,QAAyB,kBAAzB;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,cAAc,GAAGP,WAAW,CAACQ,MAAZ,CAAmBC,IAAnB,CACpBN,KAAD,IAAWA,KAAK,CAACO,EAAN,KAAa,SADH,CAAvB;;AAGA,QAAIH,cAAJ,EAAoB;AAClBH,MAAAA,QAAQ,CAACG,cAAD,CAAR;AAEAD,MAAAA,SAAS,CACPL,QAAQ,CAACM,cAAc,CAACI,OAAhB,EAAyBJ,cAAc,CAACK,WAAxC,EAAqD,IAArD,CADD,CAAT;AAGD;AACF,GAXQ,EAWN,EAXM,CAAT;;AAaA,MAAIb,OAAO,CAACI,KAAD,CAAX,EAAoB;AAClB,wBAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,WAAW,EAAC,YADd;AAEE,QAAA,MAAM,EAAE,KAAKU,YAFf;AAGE,QAAA,kBAAkB,EAAC,qBAHrB;AAIE,QAAA,eAAe,EAAE;AACfC,UAAAA,iBAAiB,EAAE,GADJ;AAEfC,UAAAA,SAAS,EAAE,IAFI;AAGfC,UAAAA,SAAS,EAAE;AAHI,SAJnB;AAAA,kBAUGX,MAAM,CAACY,GAAP,CAAW,CAACZ,MAAD,EAASa,KAAT,kBACV,QAAC,MAAD;AAAoB,UAAA,MAAM,EAAEb;AAA5B,WAAaa,KAAb;AAAA;AAAA;AAAA;AAAA,gBADD;AAVH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAoBD,CAzCD;;GAAMhB,Y;;KAAAA,Y;AA2CN,kCAAeT,KAAK,CAAC0B,IAAN,CAAWjB,YAAX,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Column from \"components/Column/Column\";\nimport { Container, Draggable } from \"react-smooth-dnd\";\nimport \"./BoardContent.scss\";\nimport { isEmpty } from \"lodash\";\nimport { initialData } from \"actions/initialData\";\nimport { mapOrder } from \"ultilities/ultis\";\n\nconst BoardContent = () => {\n  const [board, setBoard] = useState({});\n  const [column, setColumn] = useState([]);\n\n  useEffect(() => {\n    const getBoardFromDB = initialData.boards.find(\n      (board) => board.id === \"board-1\"\n    );\n    if (getBoardFromDB) {\n      setBoard(getBoardFromDB);\n\n      setColumn(\n        mapOrder(getBoardFromDB.columns, getBoardFromDB.columnOrder, \"id\")\n      );\n    }\n  }, []);\n\n  if (isEmpty(board)) {\n    return <div className=\"not-found\">Board not found</div>;\n  }\n\n  return (\n    <>\n      <nav className=\"workspace\">\n        <Container\n          orientation=\"horizontal\"\n          onDrop={this.onColumnDrop}\n          dragHandleSelector=\".column-drag-handle\"\n          dropPlaceholder={{\n            animationDuration: 150,\n            showOnTop: true,\n            className: \"cards-drop-preview\",\n          }}\n        >\n          {column.map((column, index) => (\n            <Column key={index} column={column} />\n          ))} \n        </Container>\n      </nav>\n    </>\n  );\n};\n\nexport default React.memo(BoardContent);\n"]},"metadata":{},"sourceType":"module"}