{"ast":null,"code":"var _jsxFileName = \"/Users/davinci/TaskManagementFE/src/components/Login/Login.jsx\",\n    _s = $RefreshSig$();\n\nimport { Formik } from \"formik\";\nimport { useTranslation } from \"react-i18next\";\nimport GoogleLoginButton from \"components/GoogleLogin/GoogleLogin\";\nimport React from \"react\";\nimport \"./Login.scss\";\nimport * as Yup from \"yup\"; // import { useHistory } from \"react-router-dom\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation(); // const history = useHistory();\n\n  const Schema = Yup.object().shape({\n    email: Yup.string().email(`${t(\"text.validEmail\")}`).max(255).required(`${t(\"text.requiredEmail\")}`),\n    password: Yup.string().min(6).required(`${t(\"text.validPassword\")}`),\n    rememberMe: Yup.boolean().default(false)\n  });\n  const initialValue = {\n    email: \"\",\n    password: \"\",\n    rememberMe: false\n  };\n\n  const handleOnSubmit = values => {\n    console.log(values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-popup\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-title\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: t(\"text.welcomeBack\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub-title\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: t(\"text.letMeHelpYouManageYourWorkBetter\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      onSubmit: handleOnSubmit,\n      initialValues: initialValue,\n      validationSchema: Schema,\n      validateOnChange: false,\n      children: props => {\n        console.log(props);\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"form-login\",\n          onSubmit: props.handleSubmit,\n          onKeyPress: e => {\n            if (e.key === \"Enter\") e.preventDefault();\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrap-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"email-label\",\n              children: t(\"text.yourEmail\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"email\",\n              className: \"email-input\",\n              placeholder: t(\"text.exampleEmail\"),\n              value: props.values.email,\n              onChange: props.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), props.errors && props.errors.email && props.errors.email !== \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wrap-error\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-mes\",\n                children: props.errors.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrap-input\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"password-label\",\n              children: t(\"text.yourPassword\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              className: \"password-input\",\n              value: props.values.password,\n              onChange: props.handleChange,\n              placeholder: t(\"text.validPassword\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), props.errors && props.errors.password && props.errors.password !== \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"wrap-error\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-mes\",\n                children: props.errors.password\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrap-checkbox\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              onChange: props.handleChange,\n              name: \"rememberMe\",\n              id: \"rememberMe\",\n              checked: props.values.rememberMe\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"password-label\",\n              children: t(\"text.rememberMe\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleOnSubmit,\n            type: \"submit\",\n            className: \"submit-btn\",\n            children: t(\"text.loginIn\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"or\",\n      children: t(\"text.or\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleLoginButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"other\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/register\",\n        className: \"link-register\",\n        children: t(\"text.dontHaveAccount\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/forget-password\",\n        className: \"link-register\",\n        children: t(\"text.forgottenYourPassword\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Login;\nexport default _c2 = /*#__PURE__*/React.memo(Login);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Login\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/davinci/TaskManagementFE/src/components/Login/Login.jsx"],"names":["Formik","useTranslation","GoogleLoginButton","React","Yup","Login","t","Schema","object","shape","email","string","max","required","password","min","rememberMe","boolean","default","initialValue","handleOnSubmit","values","console","log","props","handleSubmit","e","key","preventDefault","handleChange","errors","memo"],"mappings":"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","sourcesContent":["import { Formik } from \"formik\";\nimport { useTranslation } from \"react-i18next\";\nimport GoogleLoginButton from \"components/GoogleLogin/GoogleLogin\";\nimport React from \"react\";\nimport \"./Login.scss\";\nimport * as Yup from \"yup\";\n// import { useHistory } from \"react-router-dom\";\n\nconst Login = () => {\n  const { t } = useTranslation();\n  // const history = useHistory();\n\n  const Schema = Yup.object().shape({\n    email: Yup.string()\n      .email(`${t(\"text.validEmail\")}`)\n      .max(255)\n      .required(`${t(\"text.requiredEmail\")}`),\n    password: Yup.string()\n      .min(6)\n      .required(`${t(\"text.validPassword\")}`),\n    rememberMe: Yup.boolean().default(false),\n  });\n\n  const initialValue = {\n    email: \"\",\n    password: \"\",\n    rememberMe: false,\n  };\n\n  const handleOnSubmit = (values) => {\n    console.log(values);\n  };\n\n  return (\n    <div className=\"login-popup\">\n      <div className=\"title-group\">\n        <div className=\"main-title\">\n          <span>{t(\"text.welcomeBack\")}</span>\n        </div>\n        <div className=\"sub-title\">\n          <span>{t(\"text.letMeHelpYouManageYourWorkBetter\")}</span>\n        </div>\n      </div>\n      <Formik\n        onSubmit={handleOnSubmit}\n        initialValues={initialValue}\n        validationSchema={Schema}\n        validateOnChange={false}\n      >\n        {(props) => {\n          console.log(props);\n          return (\n            <form\n              className=\"form-login\"\n              onSubmit={props.handleSubmit}\n              onKeyPress={(e) => {\n                if (e.key === \"Enter\") e.preventDefault();\n              }}\n            >\n              <div className=\"wrap-input\">\n                <label className=\"email-label\">{t(\"text.yourEmail\")}</label>\n                <input\n                  type=\"text\"\n                  name=\"email\"\n                  className=\"email-input\"\n                  placeholder={t(\"text.exampleEmail\")}\n                  value={props.values.email}\n                  onChange={props.handleChange}\n                />\n                {props.errors &&\n                props.errors.email &&\n                props.errors.email !== \"undefined\" ? (\n                  <div className=\"wrap-error\">\n                    <span className=\"error-mes\">{props.errors.email}</span>\n                  </div>\n                ) : (\n                  <></>\n                )}\n              </div>\n              <div className=\"wrap-input\">\n                <label className=\"password-label\">\n                  {t(\"text.yourPassword\")}\n                </label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  className=\"password-input\"\n                  value={props.values.password}\n                  onChange={props.handleChange}\n                  placeholder={t(\"text.validPassword\")}\n                />\n                {props.errors &&\n                props.errors.password &&\n                props.errors.password !== \"undefined\" ? (\n                  <div className=\"wrap-error\">\n                    <span className=\"error-mes\">{props.errors.password}</span>\n                  </div>\n                ) : (\n                  <></>\n                )}\n              </div>\n              <div className=\"wrap-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  onChange={props.handleChange}\n                  name=\"rememberMe\"\n                  id=\"rememberMe\"\n                  checked={props.values.rememberMe}\n                />\n                <label className=\"password-label\">{t(\"text.rememberMe\")}</label>\n              </div>\n              <button\n                onClick={handleOnSubmit}\n                type=\"submit\"\n                className=\"submit-btn\"\n              >\n                {t(\"text.loginIn\")}\n              </button>\n            </form>\n          );\n        }}\n      </Formik>\n      <span className=\"or\">{t(\"text.or\")}</span>\n      <GoogleLoginButton />\n      <div className=\"other\">\n        <a href=\"/register\" className=\"link-register\">\n          {t(\"text.dontHaveAccount\")}\n        </a>\n        <a href=\"/forget-password\" className=\"link-register\">\n          {t(\"text.forgottenYourPassword\")}\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Login);\n"]},"metadata":{},"sourceType":"module"}