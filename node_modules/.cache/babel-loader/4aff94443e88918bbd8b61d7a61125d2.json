{"ast":null,"code":"var _jsxFileName = \"/Users/davinci/TaskManagementFE/src/components/BoardContent/BoardContent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Column from \"components/Column/Column\";\nimport \"./BoardContent.scss\";\nimport { isEmpty } from \"lodash\";\nimport { initialData } from \"actions/initialData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BoardContent = () => {\n  _s();\n\n  const [board, setBoard] = useState({});\n  const [column, setColumn] = useState([]);\n  useEffect(() => {\n    const getBoardFromDB = initialData.boards.find(board => board.id === \"board-1\");\n    if (getBoardFromDB) setBoard(getBoardFromDB);\n    setColumn(getBoardFromDB.columns);\n  }, []);\n\n  if (isEmpty(board)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"not-found\",\n      children: \"Board not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"workspace\",\n      children: column.map((column, index) => /*#__PURE__*/_jsxDEV(Column, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(BoardContent, \"6YquAYM2xIemk/Bx8b+NbBfjlqk=\");\n\n_c = BoardContent;\nexport default _c2 = /*#__PURE__*/React.memo(BoardContent);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BoardContent\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/davinci/TaskManagementFE/src/components/BoardContent/BoardContent.jsx"],"names":["React","useState","useEffect","Column","isEmpty","initialData","BoardContent","board","setBoard","column","setColumn","getBoardFromDB","boards","find","id","columns","map","index","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,qBAAP;AACA,SAASC,OAAT,QAAwB,QAAxB;AACA,SAASC,WAAT,QAA4B,qBAA5B;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMS,cAAc,GAAGN,WAAW,CAACO,MAAZ,CAAmBC,IAAnB,CACpBN,KAAD,IAAWA,KAAK,CAACO,EAAN,KAAa,SADH,CAAvB;AAGA,QAAIH,cAAJ,EAAoBH,QAAQ,CAACG,cAAD,CAAR;AACpBD,IAAAA,SAAS,CAACC,cAAc,CAACI,OAAhB,CAAT;AACD,GANQ,EAMN,EANM,CAAT;;AAQA,MAAIX,OAAO,CAACG,KAAD,CAAX,EAAoB;AAClB,wBAAO;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACGE,MAAM,CAACO,GAAP,CAAW,CAACP,MAAD,EAASQ,KAAT,kBACV,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AASD,CAzBD;;GAAMX,Y;;KAAAA,Y;AA2BN,kCAAeN,KAAK,CAACkB,IAAN,CAAWZ,YAAX,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Column from \"components/Column/Column\";\nimport \"./BoardContent.scss\";\nimport { isEmpty } from \"lodash\";\nimport { initialData } from \"actions/initialData\";\n\nconst BoardContent = () => {\n  const [board, setBoard] = useState({});\n  const [column, setColumn] = useState([]);\n\n  useEffect(() => {\n    const getBoardFromDB = initialData.boards.find(\n      (board) => board.id === \"board-1\"\n    );\n    if (getBoardFromDB) setBoard(getBoardFromDB);\n    setColumn(getBoardFromDB.columns);\n  }, []);\n\n  if (isEmpty(board)) {\n    return <div className=\"not-found\">Board not found</div>;\n  }\n\n  return (\n    <>\n      <nav className=\"workspace\">\n        {column.map((column, index) => (\n          <Column />\n        ))}\n      </nav>\n    </>\n  );\n};\n\nexport default React.memo(BoardContent);\n"]},"metadata":{},"sourceType":"module"}