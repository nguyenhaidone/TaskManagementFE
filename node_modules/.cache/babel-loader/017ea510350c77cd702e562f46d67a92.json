{"ast":null,"code":"var _jsxFileName = \"/Users/davinci/TaskManagementFE/src/components/AppBar/AppBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\nimport \"./AppBar.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AppBar = () => {\n  _s();\n\n  const {\n    t,\n    i18n\n  } = useTranslation();\n\n  const changeLanguage = lng => {\n    i18n.changeLanguage(lng);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: t(\"text.hello\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      \"aria-label\": \"Basic example\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: i18n.language === \"vn\" ? \"warning\" : \"secondary\",\n        onClick: () => {\n          changeLanguage(\"vn\");\n        },\n        children: t(\"text.vn\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: i18n.language === \"en\" ? \"warning\" : \"secondary\",\n        onClick: () => {\n          changeLanguage(\"en\");\n        },\n        children: t(\"text.en\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar-app\",\n      children: \"Option bar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AppBar, \"OZwazanA59tbNDUkc8lMSmTHj9Q=\", false, function () {\n  return [useTranslation];\n});\n\n_c = AppBar;\nexport default _c2 = /*#__PURE__*/React.memo(AppBar);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppBar\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/davinci/TaskManagementFE/src/components/AppBar/AppBar.jsx"],"names":["React","useTranslation","ButtonGroup","Button","AppBar","t","i18n","changeLanguage","lng","language","memo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,WAAT,EAAsBC,MAAtB,QAAoC,iBAApC;AACA,OAAO,eAAP;;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA,CAAF;AAAKC,IAAAA;AAAL,MAAcL,cAAc,EAAlC;;AAEA,QAAMM,cAAc,GAAIC,GAAD,IAAS;AAC9BF,IAAAA,IAAI,CAACC,cAAL,CAAoBC,GAApB;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAA,gBAAKH,CAAC,CAAC,YAAD;AAAN;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAa,oBAAW,eAAxB;AAAA,8BACE,QAAC,MAAD;AACE,QAAA,OAAO,EAAEC,IAAI,CAACG,QAAL,KAAkB,IAAlB,GAAyB,SAAzB,GAAqC,WADhD;AAEE,QAAA,OAAO,EAAE,MAAM;AACbF,UAAAA,cAAc,CAAC,IAAD,CAAd;AACD,SAJH;AAAA,kBAMGF,CAAC,CAAC,SAAD;AANJ;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,MAAD;AACE,QAAA,OAAO,EAAEC,IAAI,CAACG,QAAL,KAAkB,IAAlB,GAAyB,SAAzB,GAAqC,WADhD;AAEE,QAAA,OAAO,EAAE,MAAM;AACbF,UAAAA,cAAc,CAAC,IAAD,CAAd;AACD,SAJH;AAAA,kBAMGF,CAAC,CAAC,SAAD;AANJ;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAqBE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA,kBADF;AAyBD,CAhCD;;GAAMD,M;UACgBH,c;;;KADhBG,M;AAkCN,kCAAeJ,KAAK,CAACU,IAAN,CAAWN,MAAX,CAAf","sourcesContent":["import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { ButtonGroup, Button } from \"react-bootstrap\";\nimport \"./AppBar.scss\";\n\nconst AppBar = () => {\n  const { t, i18n } = useTranslation();\n\n  const changeLanguage = (lng) => {\n    i18n.changeLanguage(lng);\n  };\n\n  return (\n    <>\n      <h1>{t(\"text.hello\")}</h1>\n      <ButtonGroup aria-label=\"Basic example\">\n        <Button\n          variant={i18n.language === \"vn\" ? \"warning\" : \"secondary\"}\n          onClick={() => {\n            changeLanguage(\"vn\");\n          }}\n        >\n          {t(\"text.vn\")}\n        </Button>\n        <Button\n          variant={i18n.language === \"en\" ? \"warning\" : \"secondary\"}\n          onClick={() => {\n            changeLanguage(\"en\");\n          }}\n        >\n          {t(\"text.en\")}\n        </Button>\n      </ButtonGroup>\n\n      <nav className=\"navbar-app\">Option bar</nav>\n    </>\n  );\n};\n\nexport default React.memo(AppBar);\n"]},"metadata":{},"sourceType":"module"}