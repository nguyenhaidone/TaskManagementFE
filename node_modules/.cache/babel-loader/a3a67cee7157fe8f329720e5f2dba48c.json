{"ast":null,"code":"var _jsxFileName = \"/Users/davinci/TaskManagementFE/src/components/PopupCreateNew/PopupCreateNew.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./PopupCreateNew.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PopupCreateNew = () => {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const [boardTitle, setBoardTitle] = useState(\"\");\n\n  const handleInputChange = e => {\n    setBoardTitle(e.target.value);\n  };\n\n  const handleOnClose = () => {};\n\n  const handleOnAccept = () => {\n    boardTitle.length === 0 && alert(\"Nhap dung dinh dang\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrap-popup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: t(\"text.createBoard\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label-title\",\n          children: t(\"text.whatIsBoardName\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"title\",\n          onChange: handleInputChange,\n          placeholder: t(\"text.newBoardExample\"),\n          value: boardTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"group-button\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close\",\n          onClick: handleOnClose,\n          children: t(\"text.closeButton\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"accept\",\n          onClick: handleOnAccept,\n          children: t(\"text.confirm\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PopupCreateNew, \"MwYvaEdwtNZzfK4SB6n1mPMrOa0=\", false, function () {\n  return [useTranslation];\n});\n\n_c = PopupCreateNew;\nexport default _c2 = /*#__PURE__*/React.memo(PopupCreateNew);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PopupCreateNew\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/davinci/TaskManagementFE/src/components/PopupCreateNew/PopupCreateNew.jsx"],"names":["React","useState","useTranslation","PopupCreateNew","t","boardTitle","setBoardTitle","handleInputChange","e","target","value","handleOnClose","handleOnAccept","length","alert","memo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAO,uBAAP;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM;AAAEC,IAAAA;AAAF,MAAQF,cAAc,EAA5B;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMM,iBAAiB,GAAIC,CAAD,IAAO;AAC/BF,IAAAA,aAAa,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACD,GAFD;;AAIA,QAAMC,aAAa,GAAG,MAAM,CAAE,CAA9B;;AACA,QAAMC,cAAc,GAAG,MAAM;AAC3BP,IAAAA,UAAU,CAACQ,MAAX,KAAsB,CAAtB,IAA2BC,KAAK,CAAC,qBAAD,CAAhC;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACE;AAAA,oBAAOV,CAAC,CAAC,kBAAD;AAAR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA,gCACE;AAAO,UAAA,SAAS,EAAC,aAAjB;AAAA,oBAAgCA,CAAC,CAAC,sBAAD;AAAjC;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,QAAQ,EAAEG,iBAHZ;AAIE,UAAA,WAAW,EAAEH,CAAC,CAAC,sBAAD,CAJhB;AAKE,UAAA,KAAK,EAAEC;AALT;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAcE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,OAAlB;AAA0B,UAAA,OAAO,EAAEM,aAAnC;AAAA,oBACGP,CAAC,CAAC,kBAAD;AADJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAEQ,cAApC;AAAA,oBACGR,CAAC,CAAC,cAAD;AADJ;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAxCD;;GAAMD,c;UACUD,c;;;KADVC,c;AA0CN,kCAAeH,KAAK,CAACe,IAAN,CAAWZ,cAAX,CAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport \"./PopupCreateNew.scss\";\n\nconst PopupCreateNew = () => {\n  const { t } = useTranslation();\n  const [boardTitle, setBoardTitle] = useState(\"\");\n\n  const handleInputChange = (e) => {\n    setBoardTitle(e.target.value);\n  };\n\n  const handleOnClose = () => {};\n  const handleOnAccept = () => {\n    boardTitle.length === 0 && alert(\"Nhap dung dinh dang\");\n  };\n\n  return (\n    <div className=\"wrap-popup\">\n      <div className=\"popup\">\n        <div className=\"title\">\n          <span>{t(\"text.createBoard\")}</span>\n        </div>\n        <form className=\"form\">\n          <label className=\"label-title\">{t(\"text.whatIsBoardName\")}</label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            onChange={handleInputChange}\n            placeholder={t(\"text.newBoardExample\")}\n            value={boardTitle}\n          />\n        </form>\n        <div className=\"group-button\">\n          <button className=\"close\" onClick={handleOnClose}>\n            {t(\"text.closeButton\")}\n          </button>\n          <button className=\"accept\" onClick={handleOnAccept}>\n            {t(\"text.confirm\")}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(PopupCreateNew);\n"]},"metadata":{},"sourceType":"module"}