{"ast":null,"code":"import _objectSpread from\"/Users/davinci/TaskManagementFE/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _toConsumableArray from\"/Users/davinci/TaskManagementFE/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/davinci/TaskManagementFE/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect,useRef}from\"react\";import Column from\"components/Column/Column\";import{Container,Draggable}from\"react-smooth-dnd\";import{Container as BootstrapContainer,Row,Col,Form,Button}from\"react-bootstrap\";import\"./BoardContent.scss\";import{isEmpty}from\"lodash\";import{initialData}from\"actions/initialData\";import{useTranslation}from\"react-i18next\";import{mapOrder}from\"ultilities/ultis\";import{applyDrag}from\"../../ultilities/dnd\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var BoardContent=function BoardContent(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),board=_useState2[0],setBoard=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),column=_useState4[0],setColumn=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isCreateInputOpen=_useState6[0],setIsCreateInputOpen=_useState6[1];var handleToggleInput=function handleToggleInput(){setIsCreateInputOpen(!isCreateInputOpen);};var _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),newColumnTitle=_useState8[0],setNewColumnTitle=_useState8[1];var newColumnInputRef=useRef(null);var _useTranslation=useTranslation(),t=_useTranslation.t;useEffect(function(){var getBoardFromDB=initialData.boards.find(function(board){return board.id===\"board-1\";});if(getBoardFromDB){setBoard(getBoardFromDB);setColumn(mapOrder(getBoardFromDB.columns,getBoardFromDB.columnOrder,\"id\"));}},[]);useEffect(function(){if(newColumnInputRef&&newColumnInputRef.current){newColumnInputRef.current.focus();newColumnInputRef.current.select();}},[isCreateInputOpen]);if(isEmpty(board)){return/*#__PURE__*/_jsx(\"div\",{className:\"not-found\",children:t(\"text.boardNotFound\")});}var onColumnDrop=function onColumnDrop(dropResult){var newColumn=_toConsumableArray(column);newColumn=applyDrag(newColumn,dropResult);var newBoard=_objectSpread({},board);newBoard.columnOrder=newColumn.map(function(c){return c.id;});newBoard.columns=newColumn;setBoard(newBoard);setColumn(newColumn);// console.log(dropResult);\n// console.log(column);\n// console.log(newColumn);\n};var onCardDrop=function onCardDrop(columnId,dropResult){//log history when change column\nif(dropResult.removedIndex!==null||dropResult.addedIndex!==null){var newColumn=_toConsumableArray(column);var curColumn=newColumn.find(function(c){return c.id===columnId;});curColumn.cards=applyDrag(curColumn.cards,dropResult);curColumn.cardOrder=curColumn.cards.map(function(i){return i.id;});setColumn(newColumn);}};var handleOnCreate=function handleOnCreate(){if(!newColumnTitle){newColumnInputRef.current.focus();return;}var newColumnToAdd={id:Math.random().toString(36).substr(2,5),boardId:board.id,title:newColumnTitle.trim(),cardOrder:[],cards:[]};var newColumns=_toConsumableArray(column);newColumns.push(newColumnToAdd);var newBoard=_objectSpread({},board);newBoard.columnOrder=newColumns.map(function(c){return c.id;});newBoard.columns=newColumns;setBoard(newBoard);setColumn(newColumns);setNewColumnTitle(\"\");setIsCreateInputOpen(false);};var onChangeInput=function onChangeInput(e){setNewColumnTitle(e.target.value);};var onUpdateColumn=function onUpdateColumn(newColumnToUpdate){var columnIdtoUpdate=newColumnToUpdate.id;var newColumn=_toConsumableArray(column);var columnIndexToUpdate=newColumn.findIndex(function(i){return i.id===columnIdtoUpdate;});if(newColumnToUpdate._destroy){//removed\nnewColumn.splice(columnIndexToUpdate,1);}else{newColumn.splice(columnIndexToUpdate,1,newColumnToUpdate);}var newBoard=_objectSpread({},board);newBoard.columnOrder=newColumn.map(function(c){return c.id;});newBoard.columns=newColumn;setBoard(newBoard);setColumn(newColumn);console.log(columnIndexToUpdate);};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"nav\",{className:\"workspace\",children:[/*#__PURE__*/_jsx(Container,{orientation:\"horizontal\",onDrop:onColumnDrop,dragHandleSelector:\".column-drag-handle\",dropPlaceholder:{animationDuration:150,showOnTop:true,className:\"cards-drop-preview\"},getChildPayload:function getChildPayload(index){return column[index];},children:column.map(function(column,index){return/*#__PURE__*/_jsx(Draggable,{children:/*#__PURE__*/_jsx(Column,{column:column,onCardDrop:onCardDrop,onUpdateColumn:onUpdateColumn})},index);})}),/*#__PURE__*/_jsx(BootstrapContainer,{className:\"trello-container\",children:!isCreateInputOpen?/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(Col,{className:\"add-new-column\",onClick:handleToggleInput,children:[/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-plus icon\"}),t(\"text.addAnotherList\")]})}):/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsxs(Col,{className:\"enter-new-column\",children:[/*#__PURE__*/_jsx(Form.Control,{size:\"sm\",type:\"text\",placeholder:t(\"text.enterNewColumnTitle\"),className:\"input-enter-new-column\",ref:newColumnInputRef,value:newColumnTitle,onChange:onChangeInput,onKeyDown:function onKeyDown(e){return e.key===\"Enter\"&&handleOnCreate();}}),/*#__PURE__*/_jsx(Button,{variant:\"success\",size:\"sm\",onClick:handleOnCreate,children:t(\"text.addList\")}),/*#__PURE__*/_jsx(\"span\",{className:\"cancel-add-new\",onClick:handleToggleInput,children:/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-close icon\"})})]})})})]})});};export default/*#__PURE__*/React.memo(BoardContent);","map":{"version":3,"sources":["/Users/davinci/TaskManagementFE/src/components/BoardContent/BoardContent.jsx"],"names":["React","useState","useEffect","useRef","Column","Container","Draggable","BootstrapContainer","Row","Col","Form","Button","isEmpty","initialData","useTranslation","mapOrder","applyDrag","BoardContent","board","setBoard","column","setColumn","isCreateInputOpen","setIsCreateInputOpen","handleToggleInput","newColumnTitle","setNewColumnTitle","newColumnInputRef","t","getBoardFromDB","boards","find","id","columns","columnOrder","current","focus","select","onColumnDrop","dropResult","newColumn","newBoard","map","c","onCardDrop","columnId","removedIndex","addedIndex","curColumn","cards","cardOrder","i","handleOnCreate","newColumnToAdd","Math","random","toString","substr","boardId","title","trim","newColumns","push","onChangeInput","e","target","value","onUpdateColumn","newColumnToUpdate","columnIdtoUpdate","columnIndexToUpdate","findIndex","_destroy","splice","console","log","animationDuration","showOnTop","className","index","key","memo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Column from \"components/Column/Column\";\nimport { Container, Draggable } from \"react-smooth-dnd\";\nimport {\n  Container as BootstrapContainer,\n  Row,\n  Col,\n  Form,\n  Button,\n} from \"react-bootstrap\";\nimport \"./BoardContent.scss\";\nimport { isEmpty } from \"lodash\";\nimport { initialData } from \"actions/initialData\";\nimport { useTranslation } from \"react-i18next\";\nimport { mapOrder } from \"ultilities/ultis\";\nimport { applyDrag } from \"../../ultilities/dnd\";\n\nconst BoardContent = () => {\n  const [board, setBoard] = useState({});\n  const [column, setColumn] = useState([]);\n  const [isCreateInputOpen, setIsCreateInputOpen] = useState(false);\n  const handleToggleInput = () => {\n    setIsCreateInputOpen(!isCreateInputOpen);\n  };\n  const [newColumnTitle, setNewColumnTitle] = useState(\"\");\n  const newColumnInputRef = useRef(null);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const getBoardFromDB = initialData.boards.find(\n      (board) => board.id === \"board-1\"\n    );\n    if (getBoardFromDB) {\n      setBoard(getBoardFromDB);\n\n      setColumn(\n        mapOrder(getBoardFromDB.columns, getBoardFromDB.columnOrder, \"id\")\n      );\n    }\n  }, []);\n\n  useEffect(() => {\n    if (newColumnInputRef && newColumnInputRef.current) {\n      newColumnInputRef.current.focus();\n      newColumnInputRef.current.select();\n    }\n  }, [isCreateInputOpen]);\n\n  if (isEmpty(board)) {\n    return <div className=\"not-found\">{t(\"text.boardNotFound\")}</div>;\n  }\n\n  const onColumnDrop = (dropResult) => {\n    let newColumn = [...column];\n    newColumn = applyDrag(newColumn, dropResult);\n\n    let newBoard = { ...board };\n    newBoard.columnOrder = newColumn.map((c) => c.id);\n    newBoard.columns = newColumn;\n    setBoard(newBoard);\n    setColumn(newColumn);\n\n    // console.log(dropResult);\n    // console.log(column);\n    // console.log(newColumn);\n  };\n\n  const onCardDrop = (columnId, dropResult) => {\n    //log history when change column\n    if (dropResult.removedIndex !== null || dropResult.addedIndex !== null) {\n      let newColumn = [...column];\n\n      let curColumn = newColumn.find((c) => c.id === columnId);\n\n      curColumn.cards = applyDrag(curColumn.cards, dropResult);\n      curColumn.cardOrder = curColumn.cards.map((i) => i.id);\n\n      setColumn(newColumn);\n    }\n  };\n\n  const handleOnCreate = () => {\n    if (!newColumnTitle) {\n      newColumnInputRef.current.focus();\n      return;\n    }\n\n    const newColumnToAdd = {\n      id: Math.random().toString(36).substr(2, 5),\n      boardId: board.id,\n      title: newColumnTitle.trim(),\n      cardOrder: [],\n      cards: [],\n    };\n\n    let newColumns = [...column];\n    newColumns.push(newColumnToAdd);\n\n    let newBoard = { ...board };\n    newBoard.columnOrder = newColumns.map((c) => c.id);\n    newBoard.columns = newColumns;\n    setBoard(newBoard);\n    setColumn(newColumns);\n    setNewColumnTitle(\"\");\n    setIsCreateInputOpen(false);\n  };\n\n  const onChangeInput = (e) => {\n    setNewColumnTitle(e.target.value);\n  };\n\n  const onUpdateColumn = (newColumnToUpdate) => {\n    const columnIdtoUpdate = newColumnToUpdate.id;\n    let newColumn = [...column];\n    const columnIndexToUpdate = newColumn.findIndex(\n      (i) => i.id === columnIdtoUpdate\n    );\n    if (newColumnToUpdate._destroy) {\n      //removed\n      newColumn.splice(columnIndexToUpdate, 1);\n    } else {\n      newColumn.splice(columnIndexToUpdate, 1, newColumnToUpdate);\n    }\n    let newBoard = { ...board };\n    newBoard.columnOrder = newColumn.map((c) => c.id);\n    newBoard.columns = newColumn;\n    setBoard(newBoard);\n    setColumn(newColumn);\n    console.log(columnIndexToUpdate);\n  };\n\n  return (\n    <>\n      <nav className=\"workspace\">\n        <Container\n          orientation=\"horizontal\"\n          onDrop={onColumnDrop}\n          dragHandleSelector=\".column-drag-handle\"\n          dropPlaceholder={{\n            animationDuration: 150,\n            showOnTop: true,\n            className: \"cards-drop-preview\",\n          }}\n          getChildPayload={(index) => column[index]}\n        >\n          {column.map((column, index) => (\n            <Draggable key={index}>\n              <Column\n                column={column}\n                onCardDrop={onCardDrop}\n                onUpdateColumn={onUpdateColumn}\n              />\n            </Draggable>\n          ))}\n        </Container>\n        <BootstrapContainer className=\"trello-container\">\n          {!isCreateInputOpen ? (\n            <Row>\n              <Col className=\"add-new-column\" onClick={handleToggleInput}>\n                <i className=\"fa fa-plus icon\"></i>\n                {t(\"text.addAnotherList\")}\n              </Col>\n            </Row>\n          ) : (\n            <Row>\n              <Col className=\"enter-new-column\">\n                <Form.Control\n                  size=\"sm\"\n                  type=\"text\"\n                  placeholder={t(\"text.enterNewColumnTitle\")}\n                  className=\"input-enter-new-column\"\n                  ref={newColumnInputRef}\n                  value={newColumnTitle}\n                  onChange={onChangeInput}\n                  onKeyDown={(e) => e.key === \"Enter\" && handleOnCreate()}\n                />\n                <Button variant=\"success\" size=\"sm\" onClick={handleOnCreate}>\n                  {t(\"text.addList\")}\n                </Button>\n                <span className=\"cancel-add-new\" onClick={handleToggleInput}>\n                  <i className=\"fa fa-close icon\"></i>\n                </span>\n              </Col>\n            </Row>\n          )}\n        </BootstrapContainer>\n      </nav>\n    </>\n  );\n};\n\nexport default React.memo(BoardContent);\n"]},"metadata":{},"sourceType":"module"}