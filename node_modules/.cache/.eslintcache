[{"/Users/davinci/TaskManagementFE/src/index.js":"1","/Users/davinci/TaskManagementFE/src/App.js":"2","/Users/davinci/TaskManagementFE/src/reportWebVitals.js":"3","/Users/davinci/TaskManagementFE/src/components/AppBar/AppBar.jsx":"4","/Users/davinci/TaskManagementFE/src/components/BoardContent/BoardContent.jsx":"5","/Users/davinci/TaskManagementFE/src/components/BoardBar/BoardBar.jsx":"6","/Users/davinci/TaskManagementFE/src/actions/initialData.js":"7","/Users/davinci/TaskManagementFE/src/ultilities/ultis.js":"8","/Users/davinci/TaskManagementFE/src/components/Column/Column.jsx":"9","/Users/davinci/TaskManagementFE/src/components/Card/Card.jsx":"10","/Users/davinci/TaskManagementFE/src/ultilities/dnd.js":"11","/Users/davinci/TaskManagementFE/src/i18n.js":"12","/Users/davinci/TaskManagementFE/src/components/Common/ConfirmModal.jsx":"13","/Users/davinci/TaskManagementFE/src/ultilities/constants.js":"14","/Users/davinci/TaskManagementFE/src/ultilities/contentEditable.js":"15","/Users/davinci/TaskManagementFE/src/components/Login/Login.jsx":"16","/Users/davinci/TaskManagementFE/src/components/GoogleLogin/GoogleLogin.jsx":"17","/Users/davinci/TaskManagementFE/src/components/Register/Register.jsx":"18"},{"size":606,"mtime":1647185468013,"results":"19","hashOfConfig":"20"},{"size":518,"mtime":1648542836886,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1646878412988,"results":"22","hashOfConfig":"20"},{"size":913,"mtime":1647185468008,"results":"23","hashOfConfig":"20"},{"size":5669,"mtime":1647491833083,"results":"24","hashOfConfig":"20"},{"size":299,"mtime":1647185468012,"results":"25","hashOfConfig":"20"},{"size":5858,"mtime":1647140781918,"results":"26","hashOfConfig":"20"},{"size":139,"mtime":1647140781919,"results":"27","hashOfConfig":"20"},{"size":6387,"mtime":1647492041677,"results":"28","hashOfConfig":"20"},{"size":328,"mtime":1647097586136,"results":"29","hashOfConfig":"20"},{"size":414,"mtime":1647140781919,"results":"30","hashOfConfig":"20"},{"size":604,"mtime":1647185468013,"results":"31","hashOfConfig":"20"},{"size":1152,"mtime":1647487169200,"results":"32","hashOfConfig":"20"},{"size":116,"mtime":1647487169202,"results":"33","hashOfConfig":"20"},{"size":203,"mtime":1647487340707,"results":"34","hashOfConfig":"20"},{"size":4228,"mtime":1648541085477,"results":"35","hashOfConfig":"20"},{"size":815,"mtime":1648529909613,"results":"36","hashOfConfig":"20"},{"size":5601,"mtime":1648544853492,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tx99ya",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"45"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/davinci/TaskManagementFE/src/index.js",[],[],"/Users/davinci/TaskManagementFE/src/App.js",["95","96","97","98"],[],"import \"./App.scss\";\nimport React from \"react\";\nimport AppBar from \"components/AppBar/AppBar\";\nimport BoardBar from \"components/BoardBar/BoardBar\";\nimport BoardContent from \"components/BoardContent/BoardContent\";\nimport Login from \"components/Login/Login\";\nimport Register from \"components/Register/Register\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      {/* <AppBar/>\n      <BoardBar/>\n      <BoardContent/>\n      <Login/> */}\n      <Register />\n    </div>\n  );\n};\n\nexport default React.memo(App);\n",["99","100"],"/Users/davinci/TaskManagementFE/src/reportWebVitals.js",[],[],"/Users/davinci/TaskManagementFE/src/components/AppBar/AppBar.jsx",[],[],"/Users/davinci/TaskManagementFE/src/components/BoardContent/BoardContent.jsx",[],[],"/Users/davinci/TaskManagementFE/src/components/BoardBar/BoardBar.jsx",[],[],"/Users/davinci/TaskManagementFE/src/actions/initialData.js",[],[],"/Users/davinci/TaskManagementFE/src/ultilities/ultis.js",[],[],"/Users/davinci/TaskManagementFE/src/components/Column/Column.jsx",[],[],"/Users/davinci/TaskManagementFE/src/components/Card/Card.jsx",[],[],"/Users/davinci/TaskManagementFE/src/ultilities/dnd.js",[],[],"/Users/davinci/TaskManagementFE/src/i18n.js",[],[],"/Users/davinci/TaskManagementFE/src/components/Common/ConfirmModal.jsx",[],[],"/Users/davinci/TaskManagementFE/src/ultilities/constants.js",[],[],"/Users/davinci/TaskManagementFE/src/ultilities/contentEditable.js",[],[],"/Users/davinci/TaskManagementFE/src/components/Login/Login.jsx",["101"],[],"import { Formik } from \"formik\";\nimport { useTranslation } from \"react-i18next\";\nimport GoogleLoginButton from \"components/GoogleLogin/GoogleLogin\";\nimport React from \"react\";\nimport \"./Login.scss\";\nimport * as Yup from \"yup\";\nimport { Link } from \"react-router-dom\";\n\nconst Login = () => {\n  const { t } = useTranslation();\n\n  const Schema = Yup.object().shape({\n    email: Yup.string()\n      .email(`${t(\"text.validEmail\")}`)\n      .max(255)\n      .required(`${t(\"text.requiredEmail\")}`),\n    password: Yup.string()\n      .min(6)\n      .required(`${t(\"text.validPassword\")}`),\n    rememberMe: Yup.boolean().default(false),\n  });\n\n  const initialValue = {\n    email: \"\",\n    password: \"\",\n    rememberMe: false,\n  };\n\n  const handleOnSubmit = (values) => {\n    console.log(values);\n  };\n\n  return (\n    <div className=\"login-popup\">\n      <div className=\"title-group\">\n        <div className=\"main-title\">\n          <span>{t(\"text.welcomeBack\")}</span>\n        </div>\n        <div className=\"sub-title\">\n          <span>{t(\"text.letMeHelpYouManageYourWorkBetter\")}</span>\n        </div>\n      </div>\n      <Formik\n        onSubmit={handleOnSubmit}\n        initialValues={initialValue}\n        validationSchema={Schema}\n        validateOnChange={false}\n      >\n        {(props) => {\n          console.log(props);\n          return (\n            <form\n              className=\"form-login\"\n              onSubmit={props.handleSubmit}\n              onKeyPress={(e) => {\n                if (e.key === \"Enter\") e.preventDefault();\n              }}\n            >\n              <div className=\"wrap-input\">\n                <label className=\"email-label\">{t(\"text.yourEmail\")}</label>\n                <input\n                  type=\"text\"\n                  name=\"email\"\n                  className=\"email-input\"\n                  placeholder={t(\"text.exampleEmail\")}\n                  value={props.values.email}\n                  onChange={props.handleChange}\n                />\n                {props.errors &&\n                props.errors.email &&\n                props.errors.email !== \"undefined\" ? (\n                  <div className=\"wrap-error\">\n                    <span className=\"error-mes\">{props.errors.email}</span>\n                  </div>\n                ) : (\n                  <></>\n                )}\n              </div>\n              <div className=\"wrap-input\">\n                <label className=\"password-label\">\n                  {t(\"text.yourPassword\")}\n                </label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  className=\"password-input\"\n                  value={props.values.password}\n                  onChange={props.handleChange}\n                  placeholder={t(\"text.validPassword\")}\n                />\n                {props.errors &&\n                props.errors.password &&\n                props.errors.password !== \"undefined\" ? (\n                  <div className=\"wrap-error\">\n                    <span className=\"error-mes\">{props.errors.password}</span>\n                  </div>\n                ) : (\n                  <></>\n                )}\n              </div>\n              <div className=\"wrap-checkbox\">\n                <input\n                  type=\"checkbox\"\n                  onChange={props.handleChange}\n                  name=\"rememberMe\"\n                  id=\"rememberMe\"\n                  checked={props.values.rememberMe}\n                />\n                <label className=\"password-label\">{t(\"text.rememberMe\")}</label>\n              </div>\n              <button\n                onClick={handleOnSubmit}\n                type=\"submit\"\n                className=\"submit-btn\"\n              >\n                {t(\"text.loginIn\")}\n              </button>\n            </form>\n          );\n        }}\n      </Formik>\n      <span className=\"or\">{t(\"text.or\")}</span>\n      <GoogleLoginButton />\n      <div className=\"other\">\n        <a href=\"/register\" className=\"link-register\">\n          {t(\"text.dontHaveAccount\")}\n        </a>\n        <a href=\"/forget-password\" className=\"link-register\">\n          {t(\"text.forgottenYourPassword\")}\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Login);\n","/Users/davinci/TaskManagementFE/src/components/GoogleLogin/GoogleLogin.jsx",[],[],"/Users/davinci/TaskManagementFE/src/components/Register/Register.jsx",[],[],{"ruleId":"102","severity":1,"message":"103","line":3,"column":8,"nodeType":"104","messageId":"105","endLine":3,"endColumn":14},{"ruleId":"102","severity":1,"message":"106","line":4,"column":8,"nodeType":"104","messageId":"105","endLine":4,"endColumn":16},{"ruleId":"102","severity":1,"message":"107","line":5,"column":8,"nodeType":"104","messageId":"105","endLine":5,"endColumn":20},{"ruleId":"102","severity":1,"message":"108","line":6,"column":8,"nodeType":"104","messageId":"105","endLine":6,"endColumn":13},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"102","severity":1,"message":"113","line":7,"column":10,"nodeType":"104","messageId":"105","endLine":7,"endColumn":14},"no-unused-vars","'AppBar' is defined but never used.","Identifier","unusedVar","'BoardBar' is defined but never used.","'BoardContent' is defined but never used.","'Login' is defined but never used.","no-native-reassign",["114"],"no-negated-in-lhs",["115"],"'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]